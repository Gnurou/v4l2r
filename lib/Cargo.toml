[package]
name = "v4l2r"
version = "0.0.1"
authors = ["Alexandre Courbot <gnurou@gmail.com>"]
edition = "2018"
description = "Safe and high-level abstraction over V4L2"
repository = "https://github.com/Gnurou/v4l2r"
categories = ["os"]
keywords = ["v4l2", "video", "linux"]
license = "MIT"

[dependencies]
nix = { version = "0.27", features = ["ioctl", "mman", "poll", "fs", "event"] }
bitflags = "2.4"
thiserror = "1.0"
anyhow = "1.0"
log = "0.4.14"
enumn = "0.1.6"

# For example programs
[dev-dependencies]
ctrlc = "3.1.4"
clap = "3.2"
env_logger = "0.10"
utils = { path = "../utils" }

# For convenience we are building the bindings manually and integrating them with
# the crate. They are generated as follows:
# bindgen /usr/include/linux/videodev2.h --output src/bindings/videodev2_64.rs
# bindgen /usr/include/linux/videodev2.h --output src/bindings/videodev2_32.rs -- --target=i686-unknown-linux-gnu
#
# In case we want to use locally installed headers (make headers_install in kernel source directory) we need to pass clang args:
# bindgen usr/include/linux/videodev2.h --output videodev2_64.rs -- -Iusr/include
# otherwise clang will mix up system-wide headers with locally installed ones resulting in inconsistent output.
#
# For 32-bit headers you might need to install libc6-dev-i386-cross or a similar package, and then
# bindgen usr/include/linux/videodev2.h --output videodev2_32.rs -- --sysroot=/usr/i686-linux-gnu/ --target=i686-linux-gnu -Iusr/include
